<<<<<<< HEAD
{"time":"2025-07-06 15:16:07","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-06 15:17:51","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-06 15:18:46","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-06 15:21:19","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-10 13:02:54","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-10 13:08:06","level":"INFO","msg":"Логгер успешно инициализирован"}
=======
{"time":"2025-07-09 02:00:37","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-09 02:00:37","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-09 02:00:37","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-09 02:04:24","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-09 02:04:24","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-09 02:04:24","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-09 02:04:28","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-09 02:04:28","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 12345  Нет версии"}
{"time":"2025-07-09 02:05:20","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-09 02:05:20","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 12347  Нет версии"}
{"time":"2025-07-09 02:30:52","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-09 02:30:52","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-09 02:30:52","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-09 02:31:14","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-09 02:31:14","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 12347  Нет версии"}
{"time":"2025-07-09 02:31:20","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-09 02:31:20","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 12348  Нет версии"}
{"time":"2025-07-09 02:31:24","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-09 02:31:24","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 12349  Нет версии"}
{"time":"2025-07-10 04:23:46","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-10 04:23:46","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-10 04:23:46","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-10 04:24:45","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-10 04:24:45","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-10 04:24:45","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: ServerStruct{Host: , Port: 8081}}"}
{"time":"2025-07-10 04:34:15","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-10 04:34:15","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field DownloadItem.VersionID of type string","stack":"goroutine 35 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc213e405ce52a040, 0x84c056549d, 0xb04cc0}, {0xc000146000, 0x86}, 0x8, 0x755bbd, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026af0, {0x8ab440, 0xb4b1e0}, 0x8, {0xc000146000, 0x86}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc00010e140?, {0xc000146000?, 0xc000114200?}, {0x0?, 0x8257f2?, 0x6d?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*DownloadListHandler).AddDownloadItem(0xc000074128, {0x8aaff0, 0xc000126000}, 0xc000116280)\n\tD:/program/golang/job/pact/pact/garant_service/iternal/handler/download_handler.go:25 +0x13d\nnet/http.HandlerFunc.ServeHTTP(0xc00012a000?, {0x8aaff0?, 0xc000126000?}, 0xc00010a060?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007e2a0, {0x8aaff0, 0xc000126000}, 0xc000116280)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00010c1b0?, {0x8aaff0?, 0xc000126000?}, 0xc000133968?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007e2a0, {0x8aaff0, 0xc000126000}, 0xc000116280)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x8aaff0, 0xc000126000}, 0xc000116280)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc00012a000?, {0x8aaff0?, 0xc000126000?}, 0xc00011a005?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007e240, {0x8aaff0, 0xc000126000}, 0xc000116280)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x8ab638?, {0x8aaff0?, 0xc000126000?}, 0xae8390?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007e240, {0x8aaff0, 0xc000126000}, 0xc000116140)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x8a9718?}, {0x8aaff0?, 0xc000126000?}, 0x6?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc000282120, {0x8ab600, 0xc000021e00})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-07-10 04:39:50","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-10 04:39:50","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field DownloadItem.VersionID of type string","stack":"goroutine 8 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc213e459baf9e748, 0xd2ec6ebe41, 0xb04cc0}, {0xc000146090, 0x86}, 0x8, 0x755bbd, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026af0, {0x8ab440, 0xb4b1e0}, 0x8, {0xc000146090, 0x86}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc00010e320?, {0xc000146090?, 0xc000114340?}, {0x0?, 0x8257f2?, 0x6d?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*DownloadListHandler).AddDownloadItem(0xc000074128, {0x8aaff0, 0xc0001260e0}, 0xc000116640)\n\tD:/program/golang/job/pact/pact/garant_service/iternal/handler/download_handler.go:25 +0x13d\nnet/http.HandlerFunc.ServeHTTP(0xc00012a000?, {0x8aaff0?, 0xc0001260e0?}, 0xc00010a230?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007e2a0, {0x8aaff0, 0xc0001260e0}, 0xc000116640)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00010c480?, {0x8aaff0?, 0xc0001260e0?}, 0xc00022d968?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007e2a0, {0x8aaff0, 0xc0001260e0}, 0xc000116640)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x8aaff0, 0xc0001260e0}, 0xc000116640)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc00012a000?, {0x8aaff0?, 0xc0001260e0?}, 0xc00011a035?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007e240, {0x8aaff0, 0xc0001260e0}, 0xc000116640)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x8ab638?, {0x8aaff0?, 0xc0001260e0?}, 0xae8390?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007e240, {0x8aaff0, 0xc0001260e0}, 0xc000116500)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x8a9718?}, {0x8aaff0?, 0xc0001260e0?}, 0x6?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc0000b2900, {0x8ab600, 0xc000021e00})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-07-10 04:43:48","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-10 04:43:48","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field DownloadItem.VersionID of type string","stack":"goroutine 52 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc213e49510ff52ac, 0x10a2c47520d, 0xb04cc0}, {0xc00001e360, 0x86}, 0x8, 0x755bbd, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026af0, {0x8ab440, 0xb4b1e0}, 0x8, {0xc00001e360, 0x86}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc0000c0500?, {0xc00001e360?, 0xc00007d280?}, {0x0?, 0x8257f2?, 0x6d?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*DownloadListHandler).AddDownloadItem(0xc000074128, {0x8aaff0, 0xc0000ec0e0}, 0xc00008cc80)\n\tD:/program/golang/job/pact/pact/garant_service/iternal/handler/download_handler.go:25 +0x13d\nnet/http.HandlerFunc.ServeHTTP(0xc0001860f0?, {0x8aaff0?, 0xc0000ec0e0?}, 0xc00000b5b0?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007e2a0, {0x8aaff0, 0xc0000ec0e0}, 0xc00008cc80)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc0001880f0?, {0x8aaff0?, 0xc0000ec0e0?}, 0xc000133968?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007e2a0, {0x8aaff0, 0xc0000ec0e0}, 0xc00008cc80)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x8aaff0, 0xc0000ec0e0}, 0xc00008cc80)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc0001860f0?, {0x8aaff0?, 0xc0000ec0e0?}, 0xc0001808a5?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007e240, {0x8aaff0, 0xc0000ec0e0}, 0xc00008cc80)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x8ab638?, {0x8aaff0?, 0xc0000ec0e0?}, 0xae8390?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007e240, {0x8aaff0, 0xc0000ec0e0}, 0xc00008cb40)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x8a9718?}, {0x8aaff0?, 0xc0000ec0e0?}, 0x6?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc00011c2d0, {0x8ab600, 0xc000021e00})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-07-10 04:45:00","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-10 04:45:00","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field DownloadItem.VersionID of type string","stack":"goroutine 10 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc213e4a703d2b4d4, 0x11ae29d45c5, 0xb04cc0}, {0xc000146120, 0x86}, 0x8, 0x755bbd, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026af0, {0x8ab440, 0xb4b1e0}, 0x8, {0xc000146120, 0x86}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc00010e4b0?, {0xc000146120?, 0xc000114440?}, {0x0?, 0x8257f2?, 0x6d?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*DownloadListHandler).AddDownloadItem(0xc000074128, {0x8aaff0, 0xc0001261c0}, 0xc0001168c0)\n\tD:/program/golang/job/pact/pact/garant_service/iternal/handler/download_handler.go:25 +0x13d\nnet/http.HandlerFunc.ServeHTTP(0xc00012a000?, {0x8aaff0?, 0xc0001261c0?}, 0xc00010a2a0?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007e2a0, {0x8aaff0, 0xc0001261c0}, 0xc0001168c0)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00010c660?, {0x8aaff0?, 0xc0001261c0?}, 0xc00022d968?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007e2a0, {0x8aaff0, 0xc0001261c0}, 0xc0001168c0)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x8aaff0, 0xc0001261c0}, 0xc0001168c0)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc00012a000?, {0x8aaff0?, 0xc0001261c0?}, 0xc00011a065?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007e240, {0x8aaff0, 0xc0001261c0}, 0xc0001168c0)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x8ab638?, {0x8aaff0?, 0xc0001261c0?}, 0xae8390?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007e240, {0x8aaff0, 0xc0001261c0}, 0xc0002aa140)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x8a9718?}, {0x8aaff0?, 0xc0001261c0?}, 0x6?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc0000b2ab0, {0x8ab600, 0xc000021e00})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-07-10 04:49:22","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-10 04:49:22","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field DownloadItem.VersionID of type string","stack":"goroutine 54 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc213e4e88e1ce914, 0x157ed3c4b79, 0xb04cc0}, {0xc0001461b0, 0x86}, 0x8, 0x755bbd, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026af0, {0x8ab440, 0xb4b1e0}, 0x8, {0xc0001461b0, 0x86}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc00010e640?, {0xc0001461b0?, 0xc000114540?}, {0x0?, 0x8257f2?, 0x6d?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*DownloadListHandler).AddDownloadItem(0xc000074128, {0x8aaff0, 0xc0001262a0}, 0xc000116b40)\n\tD:/program/golang/job/pact/pact/garant_service/iternal/handler/download_handler.go:25 +0x13d\nnet/http.HandlerFunc.ServeHTTP(0xc00012a000?, {0x8aaff0?, 0xc0001262a0?}, 0xc00010a310?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007e2a0, {0x8aaff0, 0xc0001262a0}, 0xc000116b40)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00010c870?, {0x8aaff0?, 0xc0001262a0?}, 0xc00022d968?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007e2a0, {0x8aaff0, 0xc0001262a0}, 0xc000116b40)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x8aaff0, 0xc0001262a0}, 0xc000116b40)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc00012a000?, {0x8aaff0?, 0xc0001262a0?}, 0xc00011a095?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007e240, {0x8aaff0, 0xc0001262a0}, 0xc000116b40)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x8ab638?, {0x8aaff0?, 0xc0001262a0?}, 0xae8390?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007e240, {0x8aaff0, 0xc0001262a0}, 0xc00008cf00)\n\tC:/Users/Alexei/go/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x8a9718?}, {0x8aaff0?, 0xc0001262a0?}, 0x6?)\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc00011c480, {0x8ab600, 0xc000021e00})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-07-10 04:51:29","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-10 04:51:29","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-10 04:51:29","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: ServerStruct{Host: , Port: 8081}}"}
{"time":"2025-07-10 04:51:34","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-10 04:51:34","level":"DEBUG","msg":"Тело запроса: \u0026{0xc000008198 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x666580}"}
{"time":"2025-07-10 04:51:34","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880 5"}
{"time":"2025-07-10 04:52:25","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-10 04:52:25","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000081f8 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x666580}"}
{"time":"2025-07-10 04:52:25","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880 5"}
>>>>>>> 301c639241a40fb51b0fd86ebc394205c0673959
{"time":"2025-07-10 13:19:20","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-10 13:19:20","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-10 13:19:20","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: ServerStruct{Host: , Port: 8081}}"}
{"time":"2025-07-10 13:19:28","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-10 13:19:28","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-10 13:19:28","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: ServerStruct{Host: , Port: 8081}}"}
{"time":"2025-07-10 13:19:41","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-10 13:19:41","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-10 13:19:41","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: ServerStruct{Host: , Port: 8081}}"}
{"time":"2025-07-23 17:38:32","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-23 17:38:32","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-23 17:38:32","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: }, BdService: ServerStruct{Host: , Port: }}}"}
{"time":"2025-07-23 17:44:36","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-23 17:44:36","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-23 17:44:36","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: }, BdService: ServerStruct{Host: , Port: }}}"}
{"time":"2025-07-23 17:44:36","level":"INFO","msg":"Сервер запущен на :%!d(string=)\n"}
{"time":"2025-07-23 17:48:43","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-23 17:48:43","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-23 17:48:43","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-23 17:48:43","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-07-25 23:27:37","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-25 23:27:37","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-25 23:27:37","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-25 23:27:37","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-07-29 14:29:34","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-29 14:29:34","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-29 14:29:34","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-29 14:29:34","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-07-29 14:32:02","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-29 14:32:02","level":"DEBUG","msg":"Тело запроса: \u0026{0xc000232018 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0xa36600}"}
{"time":"2025-07-29 14:32:02","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field DownloadItem.FileType of type string","stack":"goroutine 35 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21a4a2ca6e228d8, 0x228fc4195d, 0xe8cce0}, {0xc00024e000, 0x85}, 0x8, 0xae6c05, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc0000b2ae0, {0xc3d400, 0xed3240}, 0x8, {0xc00024e000, 0x85}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc000214140?, {0xc00024e000?, 0xc0002201c0?}, {0x0?, 0x1?, 0x6d?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*DownloadListHandler).AddDownloadItem(0xc00008a090, {0xc3cfb0, 0xc00021a0e0}, 0xc00022e280)\n\tC:/project/golang/pact/garant_service/iternal/handler/download_handler.go:27 +0x1a5\nnet/http.HandlerFunc.ServeHTTP(0xc00022c000?, {0xc3cfb0?, 0xc00021a0e0?}, 0xc000210070?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc0000881e0, {0xc3cfb0, 0xc00021a0e0}, 0xc00022e280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc000204270?, {0xc3cfb0?, 0xc00021a0e0?}, 0xc00018b968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc0000881e0, {0xc3cfb0, 0xc00021a0e0}, 0xc00022e280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0xc3cfb0, 0xc00021a0e0}, 0xc00022e280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc00022c000?, {0xc3cfb0?, 0xc00021a0e0?}, 0xc000230035?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc000088180, {0xc3cfb0, 0xc00021a0e0}, 0xc00022e280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc3d5f8?, {0xc3cfb0?, 0xc00021a0e0?}, 0xe70350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc000088180, {0xc3cfb0, 0xc00021a0e0}, 0xc00022e140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0xc3b6b8?}, {0xc3cfb0?, 0xc00021a0e0?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc000202120, {0xc3d5c0, 0xc000098f00})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-07-29 14:33:44","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-29 14:33:44","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-29 14:33:44","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-29 14:33:44","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-07-29 14:33:49","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-29 14:33:49","level":"DEBUG","msg":"Тело запроса: \u0026{0xc00022e000 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x1246600}"}
{"time":"2025-07-29 14:33:49","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field DownloadItem.FileType of type string","stack":"goroutine 9 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21a4a474dc9ec8c, 0x1164eee11, 0x169dce0}, {0xc000250000, 0x85}, 0x8, 0x12f6c05, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026fb0, {0x144d540, 0x16e4240}, 0x8, {0xc000250000, 0x85}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc0002040f0?, {0xc000250000?, 0xc000210240?}, {0x0?, 0x1?, 0x6d?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*DownloadListHandler).AddDownloadItem(0xc000068158, {0x144d0f0, 0xc000232000}, 0xc000212140)\n\tC:/project/golang/pact/garant_service/iternal/handler/download_handler.go:27 +0x1a5\nnet/http.HandlerFunc.ServeHTTP(0xc000238000?, {0x144d0f0?, 0xc000232000?}, 0xc000200050?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007a300, {0x144d0f0, 0xc000232000}, 0xc000212140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc000202150?, {0x144d0f0?, 0xc000232000?}, 0xc00021b968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007a300, {0x144d0f0, 0xc000232000}, 0xc000212140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x144d0f0, 0xc000232000}, 0xc000212140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc000238000?, {0x144d0f0?, 0xc000232000?}, 0xc00021c005?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007a2a0, {0x144d0f0, 0xc000232000}, 0xc000212140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x144d738?, {0x144d0f0?, 0xc000232000?}, 0x1681350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007a2a0, {0x144d0f0, 0xc000232000}, 0xc000212000)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x144b7f8?}, {0x144d0f0?, 0xc000232000?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc000032990, {0x144d700, 0xc000178540})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-07-29 14:43:44","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-29 14:43:44","level":"DEBUG","msg":"Тело запроса: {}"}
{"time":"2025-07-29 14:43:44","level":"ERROR","msg":"Ошибка декодирования JSON: EOF","stack":"goroutine 12 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21a4adc2f37c2cc, 0x8bbfd95ced, 0x169dce0}, {0xc00008c0c0, 0x31}, 0x8, 0x12f6c05, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026fb0, {0x144d540, 0x16e4240}, 0x8, {0xc00008c0c0, 0x31}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc0000b2140?, {0xc00008c0c0?, 0xc0000ae100?}, {0x0?, 0x1?, 0x6d?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*DownloadListHandler).AddDownloadItem(0xc000068158, {0x144d0f0, 0xc0000aa000}, 0xc0000b2000)\n\tC:/project/golang/pact/garant_service/iternal/handler/download_handler.go:27 +0x1a5\nnet/http.HandlerFunc.ServeHTTP(0xc0000b0000?, {0x144d0f0?, 0xc0000aa000?}, 0xc0000a2030?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007a300, {0x144d0f0, 0xc0000aa000}, 0xc0000b2000)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00008e180?, {0x144d0f0?, 0xc0000aa000?}, 0xc000217968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007a300, {0x144d0f0, 0xc0000aa000}, 0xc0000b2000)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x144d0f0, 0xc0000aa000}, 0xc0000b2000)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc0000b0000?, {0x144d0f0?, 0xc0000aa000?}, 0xc00009a005?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007a2a0, {0x144d0f0, 0xc0000aa000}, 0xc0000b2000)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x144d738?, {0x144d0f0?, 0xc0000aa000?}, 0x1681350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007a2a0, {0x144d0f0, 0xc0000aa000}, 0xc0002123c0)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0xc000202390?}, {0x144d0f0?, 0xc0000aa000?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc000032bd0, {0x144d700, 0xc000178540})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-07-29 14:45:02","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-29 14:45:02","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000d8018 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x1246600}"}
{"time":"2025-07-29 14:45:02","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field DownloadItem.FileType of type string","stack":"goroutine 13 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21a4aefa783fb04, 0x9de13b0c85, 0x169dce0}, {0xc0000e4000, 0x85}, 0x8, 0x12f6c05, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026fb0, {0x144d540, 0x16e4240}, 0x8, {0xc0000e4000, 0x85}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc0000a4190?, {0xc0000e4000?, 0xc0000ae280?}, {0x0?, 0x1?, 0x6d?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*DownloadListHandler).AddDownloadItem(0xc000068158, {0x144d0f0, 0xc0000aa0e0}, 0xc0000b2280)\n\tC:/project/golang/pact/garant_service/iternal/handler/download_handler.go:27 +0x1a5\nnet/http.HandlerFunc.ServeHTTP(0xc0000b0000?, {0x144d0f0?, 0xc0000aa0e0?}, 0xc0000a2070?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007a300, {0x144d0f0, 0xc0000aa0e0}, 0xc0000b2280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00008e2d0?, {0x144d0f0?, 0xc0000aa0e0?}, 0xc0000e1968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007a300, {0x144d0f0, 0xc0000aa0e0}, 0xc0000b2280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x144d0f0, 0xc0000aa0e0}, 0xc0000b2280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc0000b0000?, {0x144d0f0?, 0xc0000aa0e0?}, 0xc00009a065?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007a2a0, {0x144d0f0, 0xc0000aa0e0}, 0xc0000b2280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x144d738?, {0x144d0f0?, 0xc0000aa0e0?}, 0x1681350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007a2a0, {0x144d0f0, 0xc0000aa0e0}, 0xc000103040)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x144b7f8?}, {0x144d0f0?, 0xc0000aa0e0?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc000032c60, {0x144d700, 0xc000178540})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-07-29 14:47:29","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-29 14:47:29","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000d8060 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x1246600}"}
{"time":"2025-07-29 14:47:29","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field DownloadItem.FileType of type string","stack":"goroutine 14 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21a4b145b27ac20, 0xc00e9ae101, 0x169dce0}, {0xc0000e4090, 0x85}, 0x8, 0x12f6c05, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026fb0, {0x144d540, 0x16e4240}, 0x8, {0xc0000e4090, 0x85}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc0000a4370?, {0xc0000e4090?, 0xc0000ae440?}, {0x0?, 0x1?, 0x6d?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*DownloadListHandler).AddDownloadItem(0xc000068158, {0x144d0f0, 0xc0000aa1c0}, 0xc0000b2640)\n\tC:/project/golang/pact/garant_service/iternal/handler/download_handler.go:27 +0x1a5\nnet/http.HandlerFunc.ServeHTTP(0xc0000b0000?, {0x144d0f0?, 0xc0000aa1c0?}, 0xc0000a20e0?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007a300, {0x144d0f0, 0xc0000aa1c0}, 0xc0000b2640)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00008e480?, {0x144d0f0?, 0xc0000aa1c0?}, 0xc00021b968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007a300, {0x144d0f0, 0xc0000aa1c0}, 0xc0000b2640)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x144d0f0, 0xc0000aa1c0}, 0xc0000b2640)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc0000b0000?, {0x144d0f0?, 0xc0000aa1c0?}, 0xc00009a095?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007a2a0, {0x144d0f0, 0xc0000aa1c0}, 0xc0000b2640)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x144d738?, {0x144d0f0?, 0xc0000aa1c0?}, 0x1681350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007a2a0, {0x144d0f0, 0xc0000aa1c0}, 0xc0000b2500)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x144b7f8?}, {0x144d0f0?, 0xc0000aa1c0?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc000032cf0, {0x144d700, 0xc000178540})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-07-29 14:52:30","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-29 14:52:30","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000d8090 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x1246600}"}
{"time":"2025-07-29 14:52:30","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field DownloadItem.FileType of type string","stack":"goroutine 50 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21a4b5f9b80067c, 0x10623a51e45, 0x169dce0}, {0xc0000e4120, 0x85}, 0x8, 0x12f6c05, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026fb0, {0x144d540, 0x16e4240}, 0x8, {0xc0000e4120, 0x85}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc0000a4550?, {0xc0000e4120?, 0xc0000ae600?}, {0x0?, 0x1?, 0x6d?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*DownloadListHandler).AddDownloadItem(0xc000068158, {0x144d0f0, 0xc0000aa2a0}, 0xc0000b2a00)\n\tC:/project/golang/pact/garant_service/iternal/handler/download_handler.go:27 +0x1a5\nnet/http.HandlerFunc.ServeHTTP(0xc0000b0000?, {0x144d0f0?, 0xc0000aa2a0?}, 0xc0000a2150?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007a300, {0x144d0f0, 0xc0000aa2a0}, 0xc0000b2a00)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00008e630?, {0x144d0f0?, 0xc0000aa2a0?}, 0xc0000dd968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007a300, {0x144d0f0, 0xc0000aa2a0}, 0xc0000b2a00)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x144d0f0, 0xc0000aa2a0}, 0xc0000b2a00)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc0000b0000?, {0x144d0f0?, 0xc0000aa2a0?}, 0xc00009a0c5?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007a2a0, {0x144d0f0, 0xc0000aa2a0}, 0xc0000b2a00)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x144d738?, {0x144d0f0?, 0xc0000aa2a0?}, 0x1681350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007a2a0, {0x144d0f0, 0xc0000aa2a0}, 0xc0000b28c0)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x144b7f8?}, {0x144d0f0?, 0xc0000aa2a0?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc00028e000, {0x144d700, 0xc000178540})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-07-29 14:54:45","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-29 14:54:45","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000083d8 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x1246600}"}
{"time":"2025-07-29 14:54:45","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field DownloadItem.FileType of type string","stack":"goroutine 39 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21a4b81663e6054, 0x1259ce8c55d, 0x169dce0}, {0xc000020120, 0x85}, 0x8, 0x12f6c05, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026fb0, {0x144d540, 0x16e4240}, 0x8, {0xc000020120, 0x85}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc000134690?, {0xc000020120?, 0xc0000794c0?}, {0x0?, 0x1?, 0x6d?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*DownloadListHandler).AddDownloadItem(0xc000068158, {0x144d0f0, 0xc0001601c0}, 0xc000103180)\n\tC:/project/golang/pact/garant_service/iternal/handler/download_handler.go:27 +0x1a5\nnet/http.HandlerFunc.ServeHTTP(0xc0001900f0?, {0x144d0f0?, 0xc0001601c0?}, 0xc00000ba90?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007a300, {0x144d0f0, 0xc0001601c0}, 0xc000103180)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc000178a50?, {0x144d0f0?, 0xc0001601c0?}, 0xc0000e1968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007a300, {0x144d0f0, 0xc0001601c0}, 0xc000103180)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x144d0f0, 0xc0001601c0}, 0xc000103180)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc0001900f0?, {0x144d0f0?, 0xc0001601c0?}, 0xc0001779e5?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc00007a2a0, {0x144d0f0, 0xc0001601c0}, 0xc000103180)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x144d738?, {0x144d0f0?, 0xc0001601c0?}, 0x1681350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc00007a2a0, {0x144d0f0, 0xc0001601c0}, 0xc0000b2c80)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x144b7f8?}, {0x144d0f0?, 0xc0001601c0?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc000092510, {0x144d700, 0xc000178540})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-07-31 14:27:19","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-31 14:27:20","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-31 14:27:20","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-31 14:27:20","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-07-31 14:36:51","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-31 14:36:51","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000a8258 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x10b6600}"}
{"time":"2025-07-31 14:36:51","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-07-31 14:36:52","level":"ERROR","msg":"❌ Ошибка скачивания файла для темы 70670880: не удалось скачать ./files/1_0.odt: status code: 423","stack":"goroutine 19 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21af33535a16adc, 0x856522fb25, 0x1519ce0}, {0xc000202120, 0x8f}, 0x8, 0x116507a, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026ed0, {0x12be800, 0x1560240}, 0x8, {0xc000202120, 0x8f}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x1237039?, {0xc000202120?, 0xc0000f7fb0?}, {0x0?, 0x2?, 0x0?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartDownloadWorker.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/download_worker.go:48 +0x5fa\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartDownloadWorker in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/download_worker.go:17 +0x73\n"}
{"time":"2025-07-31 15:31:58","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-31 15:31:58","level":"DEBUG","msg":"Тело запроса: \u0026{0xc000008588 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x10b6600}"}
{"time":"2025-07-31 15:31:58","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-07-31 15:31:59","level":"ERROR","msg":"❌ Ошибка скачивания файла для темы 70670880: не удалось скачать ./files/1_0.odt: status code: 423","stack":"goroutine 19 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21af66fec45aa5c, 0x3875456a8a5, 0x1519ce0}, {0xc00038e1b0, 0x8f}, 0x8, 0x116507a, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026ed0, {0x12be800, 0x1560240}, 0x8, {0xc00038e1b0, 0x8f}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x1237039?, {0xc00038e1b0?, 0xc0000f7fb0?}, {0x0?, 0x2?, 0x0?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartDownloadWorker.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/download_worker.go:48 +0x5fa\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartDownloadWorker in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/download_worker.go:17 +0x73\n"}
{"time":"2025-07-31 15:33:16","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-31 15:33:16","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0001ba528 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x10b6600}"}
{"time":"2025-07-31 15:33:16","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-07-31 15:33:16","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-07-31 16:24:20","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-31 16:24:20","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-31 16:24:20","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-31 16:24:20","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-07-31 16:24:37","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-31 16:24:37","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0001ae000 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x716600}"}
{"time":"2025-07-31 16:24:37","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-07-31 16:24:37","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-07-31 16:24:57","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-31 16:24:57","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-31 16:24:57","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-31 16:24:57","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-07-31 16:25:00","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-31 16:25:00","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0001ae000 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0xd86600}"}
{"time":"2025-07-31 16:25:00","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-07-31 16:25:00","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-07-31 17:54:48","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-31 17:54:48","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-31 17:54:48","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-31 17:54:48","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-07-31 17:54:53","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-31 17:54:53","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0002ae000 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x8f6600}"}
{"time":"2025-07-31 17:54:53","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-07-31 17:54:53","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-07-31 17:57:47","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-31 17:57:47","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-31 17:57:47","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-31 17:57:47","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-07-31 17:57:49","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-31 17:57:49","level":"DEBUG","msg":"Тело запроса: \u0026{0xc000008198 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x10e6600}"}
{"time":"2025-07-31 17:57:49","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-07-31 17:57:49","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-07-31 18:41:48","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-31 18:41:48","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-31 18:41:48","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-31 18:41:48","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-07-31 18:42:00","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-31 18:42:00","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000c4000 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0xfe6600}"}
{"time":"2025-07-31 18:42:00","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-07-31 18:42:00","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-07-31 18:42:00","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 400 url: http://localhost:8080/file/save","stack":"goroutine 9 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21b01920ce76e20, 0x2c57eab91, 0x144bd40}, {0xc0001bc180, 0x7d}, 0x8, 0x109539f, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026ed0, {0x11efd80, 0x14922a0}, 0x8, {0xc0001bc180, 0x7d}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x1168ecc?, {0xc0001bc180?, 0xc000293f60?}, {0x0?, 0x3?, 0x1f?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-07-31 18:45:05","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-31 18:45:05","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0001d4198 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0xfe6600}"}
{"time":"2025-07-31 18:45:05","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-07-31 18:46:28","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-31 18:46:28","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0001d41e0 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0xfe6600}"}
{"time":"2025-07-31 18:46:28","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-07-31 18:49:14","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-31 18:49:14","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000083f0 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0xfe6600}"}
{"time":"2025-07-31 18:49:14","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-07-31 18:52:13","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-07-31 18:52:13","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-07-31 18:52:13","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-07-31 18:52:13","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-07-31 18:53:22","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-07-31 18:53:22","level":"DEBUG","msg":"Тело запроса: \u0026{0xc000008198 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x11c6600}"}
{"time":"2025-07-31 18:53:22","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-07-31 18:53:22","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-07-31 18:53:22","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 400 url: http://localhost:8080/file/save","stack":"goroutine 20 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21b023cabc970cc, 0x1010e86501, 0x162bd40}, {0xc00001c780, 0x7d}, 0x8, 0x127539f, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026ed0, {0x13cfd80, 0x16722a0}, 0x8, {0xc00001c780, 0x7d}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x1348ecc?, {0xc00001c780?, 0xc0001e5f60?}, {0x0?, 0x3?, 0x1f?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-11 16:52:58","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-11 16:52:58","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-11 16:52:58","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-11 16:52:58","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-11 18:44:36","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-11 18:44:36","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000a6258 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x7a6600}"}
{"time":"2025-08-11 18:44:36","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-11 18:44:36","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-11 18:44:36","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 400 url: http://localhost:8080/file/save","stack":"goroutine 20 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21ea1d92ce7a398, 0x617850d12e9, 0xc0bd40}, {0xc0001d4080, 0x7d}, 0x8, 0x85539f, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026ed0, {0x9afd80, 0xc522a0}, 0x8, {0xc0001d4080, 0x7d}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x928ecc?, {0xc0001d4080?, 0xc000211f60?}, {0x0?, 0x3?, 0x1f?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-11 21:31:03","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-11 21:31:03","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0001ba090 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x7a6600}"}
{"time":"2025-08-11 21:31:03","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-11 21:31:03","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-11 21:31:03","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 400 url: http://localhost:8080/file/save","stack":"goroutine 20 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21eab99d26b3944, 0xf2ca9808f75, 0xc0bd40}, {0xc0001d4180, 0x7d}, 0x8, 0x85539f, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026ed0, {0x9afd80, 0xc522a0}, 0x8, {0xc0001d4180, 0x7d}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x928ecc?, {0xc0001d4180?, 0xc000211f60?}, {0x0?, 0x3?, 0x1f?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-11 22:06:09","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-11 22:06:10","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-11 22:06:10","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-11 22:06:10","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-11 22:06:26","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-11 22:06:26","level":"DEBUG","msg":"Тело запроса: \u0026{0xc000096048 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x10c6600}"}
{"time":"2025-08-11 22:06:26","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-11 22:06:26","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-11 22:06:26","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 400 url: http://localhost:8080/file/save","stack":"goroutine 20 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21eadacb3546ba8, 0x3f092cc5d, 0x152bd40}, {0xc000324080, 0x7d}, 0x8, 0x117539f, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026ed0, {0x12cfe40, 0x15722a0}, 0x8, {0xc000324080, 0x7d}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x1248f8c?, {0xc000324080?, 0xc000203f60?}, {0x0?, 0x3?, 0x1f?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-11 22:08:39","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-11 22:08:39","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-11 22:08:39","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-11 22:08:39","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-11 22:08:50","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-11 22:08:50","level":"DEBUG","msg":"Тело запроса: \u0026{0xc000190048 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x5d6600}"}
{"time":"2025-08-11 22:08:50","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-11 22:08:51","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-11 22:08:51","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 500 url: http://localhost:8080/file/save","stack":"goroutine 20 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc21eadd0d39b6f64, 0x2aebebe2d, 0xa3bd40}, {0xc0001c8100, 0x7d}, 0x8, 0x68539f, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000026ed0, {0x7dfe40, 0xa822a0}, 0x8, {0xc0001c8100, 0x7d}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x758f8c?, {0xc0001c8100?, 0xc00028ff60?}, {0x0?, 0x3?, 0x1f?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-18 15:49:36","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-18 15:49:36","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-18 15:49:36","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-18 15:49:36","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-18 17:19:59","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-18 17:19:59","level":"DEBUG","msg":"Тело запроса: \u0026{0xc000008120 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0xf06600}"}
{"time":"2025-08-18 17:19:59","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-18 17:19:59","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-18 17:20:00","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 500 url: http://localhost:8080/file/save","stack":"goroutine 20 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc220eb8401298e38, 0x4eeb0eeb009, 0x136bd40}, {0xc0000e6180, 0x7d}, 0x8, 0xfb539f, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc0000b8a00, {0x110fe40, 0x13b22a0}, 0x8, {0xc0000e6180, 0x7d}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x1088f8c?, {0xc0000e6180?, 0xc000213f60?}, {0x0?, 0x3?, 0x1f?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-18 18:26:50","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-18 18:26:50","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000c23f0 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0xf06600}"}
{"time":"2025-08-18 18:26:50","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-18 18:26:50","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-18 18:26:50","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 500 url: http://localhost:8080/file/save","stack":"goroutine 20 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc220ef6e86cadb44, 0x8945d302115, 0x136bd40}, {0xc0001e2100, 0x7d}, 0x8, 0xfb539f, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc0000b8a00, {0x110fe40, 0x13b22a0}, 0x8, {0xc0001e2100, 0x7d}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x1088f8c?, {0xc0001e2100?, 0xc000213f60?}, {0x0?, 0x3?, 0x1f?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-18 18:28:46","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-18 18:28:46","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000082b8 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0xf06600}"}
{"time":"2025-08-18 18:28:46","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-18 18:28:47","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-18 18:28:47","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 500 url: http://localhost:8080/file/save","stack":"goroutine 20 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc220ef8bc2a75434, 0x8af96caec05, 0x136bd40}, {0xc0000e6280, 0x7d}, 0x8, 0xfb539f, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc0000b8a00, {0x110fe40, 0x13b22a0}, 0x8, {0xc0000e6280, 0x7d}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x1088f8c?, {0xc0000e6280?, 0xc000213f60?}, {0x0?, 0x3?, 0x1f?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-18 18:32:46","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-18 18:32:46","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000083a8 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0xf06600}"}
{"time":"2025-08-18 18:32:46","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-18 18:32:46","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-18 18:32:46","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 500 url: http://localhost:8080/file/save","stack":"goroutine 20 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc220efc7ac46a7e0, 0x8e765ecd5b1, 0x136bd40}, {0xc0000e6300, 0x7d}, 0x8, 0xfb539f, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc0000b8a00, {0x110fe40, 0x13b22a0}, 0x8, {0xc0000e6300, 0x7d}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x1088f8c?, {0xc0000e6300?, 0xc000213f60?}, {0x0?, 0x3?, 0x1f?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-18 18:35:42","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-18 18:35:42","level":"DEBUG","msg":"Тело запроса: \u0026{0xc000308048 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0xf06600}"}
{"time":"2025-08-18 18:35:42","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-18 18:35:42","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-18 18:35:42","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 500 url: http://localhost:8080/file/save","stack":"goroutine 20 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc220eff3b7259914, 0x9106b36a6e5, 0x136bd40}, {0xc0000e6480, 0x7d}, 0x8, 0xfb539f, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc0000b8a00, {0x110fe40, 0x13b22a0}, 0x8, {0xc0000e6480, 0x7d}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x1088f8c?, {0xc0000e6480?, 0xc000213f60?}, {0x0?, 0x3?, 0x1f?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-18 18:37:30","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-18 18:37:30","level":"DEBUG","msg":"Тело запроса: \u0026{0xc000308108 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0xf06600}"}
{"time":"2025-08-18 18:37:30","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-18 18:37:30","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-18 18:37:30","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 500 url: http://localhost:8080/file/save","stack":"goroutine 20 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc220f00e914a2688, 0x9296aa86c59, 0x136bd40}, {0xc000078780, 0x7d}, 0x8, 0xfb539f, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc0000b8a00, {0x110fe40, 0x13b22a0}, 0x8, {0xc000078780, 0x7d}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x1088f8c?, {0xc000078780?, 0xc000213f60?}, {0x0?, 0x3?, 0x1f?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-18 18:39:31","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-18 18:39:31","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000c28e8 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0xf06600}"}
{"time":"2025-08-18 18:39:31","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-18 18:39:31","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-18 18:39:32","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 201 url: http://localhost:8080/file/save","stack":"goroutine 20 [running]:\nruntime/debug.Stack()\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc220f02d0ec71650, 0x945cfe9a021, 0x136bd40}, {0xc000078900, 0x7d}, 0x8, 0xfb539f, ...})\n\tD:/program/golang/job/pact/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc0000b8a00, {0x110fe40, 0x13b22a0}, 0x8, {0xc000078900, 0x7d}, {0x0, 0x0, 0x0})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x1088f8c?, {0xc000078900?, 0xc000213f60?}, {0x0?, 0x3?, 0x1f?})\n\tC:/Users/Alexei/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.4.windows-amd64/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tD:/program/golang/job/pact/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-19 14:11:54","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-19 14:11:54","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-19 14:11:54","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-19 14:11:54","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-19 15:19:34","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-19 15:19:34","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000a0000 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x5d6600}"}
{"time":"2025-08-19 15:19:34","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-19 15:19:34","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-19 15:19:34","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 500 url: http://localhost:8080/file/save","stack":"goroutine 9 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc22138d5a561fc68, 0x3b14cd0211d, 0xa30d00}, {0xc000220100, 0x7d}, 0x8, 0x68539f, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000020fb0, {0x7dfe40, 0xa77260}, 0x8, {0xc000220100, 0x7d}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x758f8c?, {0xc000220100?, 0xc0000e7f60?}, {0x0?, 0x3?, 0x1f?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tC:/project/golang/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tC:/project/golang/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-19 17:18:07","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-19 17:18:07","level":"DEBUG","msg":"Тело запроса: \u0026{0xc000238120 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x5d6600}"}
{"time":"2025-08-19 17:18:07","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-19 17:18:07","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-19 17:18:08","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 201 url: http://localhost:8080/file/save","stack":"goroutine 9 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc2213fc807edc9c8, 0xa298bfeb759, 0xa30d00}, {0xc0000be200, 0x7d}, 0x8, 0x68539f, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000020fb0, {0x7dfe40, 0xa77260}, 0x8, {0xc0000be200, 0x7d}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x758f8c?, {0xc0000be200?, 0xc0000e7f60?}, {0x0?, 0x3?, 0x1f?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tC:/project/golang/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tC:/project/golang/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-19 17:20:26","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-19 17:20:26","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000084c8 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x5d6600}"}
{"time":"2025-08-19 17:20:26","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-19 17:20:26","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-19 17:20:27","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 201 url: http://localhost:8080/file/save","stack":"goroutine 9 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc2213fead650daa0, 0xa49f7976559, 0xa30d00}, {0xc000332100, 0x7d}, 0x8, 0x68539f, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000020fb0, {0x7dfe40, 0xa77260}, 0x8, {0xc000332100, 0x7d}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x758f8c?, {0xc000332100?, 0xc0000e7f60?}, {0x0?, 0x3?, 0x1f?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tC:/project/golang/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tC:/project/golang/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-19 17:24:06","level":"INFO","msg":"Получен запрос на добавление элемента в очередь скачивания"}
{"time":"2025-08-19 17:24:06","level":"DEBUG","msg":"Тело запроса: \u0026{0xc0000a0378 \u003cnil\u003e \u003cnil\u003e false true {0 0} false false false 0x5d6600}"}
{"time":"2025-08-19 17:24:06","level":"INFO","msg":"Добавлен элемент в очередь скачивания: 70670880"}
{"time":"2025-08-19 17:24:06","level":"INFO","msg":"✅ Путь к сконвертированному файлу: ./files/1_0.txt"}
{"time":"2025-08-19 17:24:06","level":"ERROR","msg":"⚠️ Ошибка отправки файла в бд ./files/1_0.txt  statusCode: 201 url: http://localhost:8080/file/save","stack":"goroutine 9 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc2214021b1f2d808, 0xa7d10d7c2b5, 0xa30d00}, {0xc00006a600, 0x7d}, 0x8, 0x68539f, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000020fb0, {0x7dfe40, 0xa77260}, 0x8, {0xc00006a600, 0x7d}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0x758f8c?, {0xc00006a600?, 0xc0000e7f60?}, {0x0?, 0x3?, 0x1f?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile.func1()\n\tC:/project/golang/pact/garant_service/iternal/queue/bd_service.go:49 +0x4df\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartSaveBDFile in goroutine 1\n\tC:/project/golang/pact/garant_service/iternal/queue/bd_service.go:19 +0x76\n"}
{"time":"2025-08-19 17:36:57","level":"INFO","msg":"Получен запрос на добавление элемента в очередь валидации"}
{"time":"2025-08-19 17:36:57","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field ValidationItem.FileType of type string","stack":"goroutine 62 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc22140e272cc7694, 0xb3095945d89, 0xa30d00}, {0xc0000cc6c0, 0x87}, 0x8, 0x688959, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000020fb0, {0x7dfe40, 0xa77260}, 0x8, {0xc0000cc6c0, 0x87}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc00008ee60?, {0xc0000cc6c0?, 0xc000094900?}, {0x0?, 0x759a94?, 0x6b?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*CheckListHandler).AddCheckItem(0xc000062160, {0x7df9f0, 0xc0000a41c0}, 0xc0000977c0)\n\tC:/project/golang/pact/garant_service/iternal/handler/check_handler.go:38 +0x139\nnet/http.HandlerFunc.ServeHTTP(0xc0000a8000?, {0x7df9f0?, 0xc0000a41c0?}, 0xc00008a900?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc000076300, {0x7df9f0, 0xc0000a41c0}, 0xc0000977c0)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00008dbc0?, {0x7df9f0?, 0xc0000a41c0?}, 0xc0000e3968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc000076300, {0x7df9f0, 0xc0000a41c0}, 0xc0000977c0)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x7df9f0, 0xc0000a41c0}, 0xc0000977c0)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc0000a8000?, {0x7df9f0?, 0xc0000a41c0?}, 0xc0000bc285?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc0000762a0, {0x7df9f0, 0xc0000a41c0}, 0xc0000977c0)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x7e0038?, {0x7df9f0?, 0xc0000a41c0?}, 0xa14350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc0000762a0, {0x7df9f0, 0xc0000a41c0}, 0xc000097680)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x7de0f8?}, {0x7df9f0?, 0xc0000a41c0?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc00002d440, {0x7e0000, 0xc000178540})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-08-19 17:39:24","level":"INFO","msg":"Получен запрос на добавление элемента в очередь валидации"}
{"time":"2025-08-19 17:39:24","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field ValidationItem.FileType of type string","stack":"goroutine 63 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc22141072a95c584, 0xb52c7585105, 0xa30d00}, {0xc0000cc750, 0x87}, 0x8, 0x688959, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000020fb0, {0x7dfe40, 0xa77260}, 0x8, {0xc0000cc750, 0x87}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc00008f0e0?, {0xc0000cc750?, 0xc000094a40?}, {0x0?, 0x759a94?, 0x6b?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*CheckListHandler).AddCheckItem(0xc000062160, {0x7df9f0, 0xc0000a42a0}, 0xc000097b80)\n\tC:/project/golang/pact/garant_service/iternal/handler/check_handler.go:38 +0x139\nnet/http.HandlerFunc.ServeHTTP(0xc0000a8000?, {0x7df9f0?, 0xc0000a42a0?}, 0xc00008aab0?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc000076300, {0x7df9f0, 0xc0000a42a0}, 0xc000097b80)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00008de60?, {0x7df9f0?, 0xc0000a42a0?}, 0xc0000b1968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc000076300, {0x7df9f0, 0xc0000a42a0}, 0xc000097b80)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x7df9f0, 0xc0000a42a0}, 0xc000097b80)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc0000a8000?, {0x7df9f0?, 0xc0000a42a0?}, 0xc0000bc2a5?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc0000762a0, {0x7df9f0, 0xc0000a42a0}, 0xc000097b80)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x7e0038?, {0x7df9f0?, 0xc0000a42a0?}, 0xa14350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc0000762a0, {0x7df9f0, 0xc0000a42a0}, 0xc000097a40)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x7de0f8?}, {0x7df9f0?, 0xc0000a42a0?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc00002d4d0, {0x7e0000, 0xc000178540})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-08-19 17:40:30","level":"INFO","msg":"Получен запрос на добавление элемента в очередь валидации"}
{"time":"2025-08-19 17:40:30","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field ValidationItem.FileType of type string","stack":"goroutine 95 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc2214117adfb7688, 0xb6228b12c51, 0xa30d00}, {0xc000370000, 0x87}, 0x8, 0x688959, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc000020fb0, {0x7dfe40, 0xa77260}, 0x8, {0xc000370000, 0x87}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc00031e460?, {0xc000370000?, 0xc00030c3c0?}, {0x0?, 0x759a94?, 0x6b?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*CheckListHandler).AddCheckItem(0xc000062160, {0x7df9f0, 0xc000368000}, 0xc000314780)\n\tC:/project/golang/pact/garant_service/iternal/handler/check_handler.go:38 +0x139\nnet/http.HandlerFunc.ServeHTTP(0xc00036c000?, {0x7df9f0?, 0xc000368000?}, 0xc000302120?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc000076300, {0x7df9f0, 0xc000368000}, 0xc000314780)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc000304840?, {0x7df9f0?, 0xc000368000?}, 0xc0002ab968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc000076300, {0x7df9f0, 0xc000368000}, 0xc000314780)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x7df9f0, 0xc000368000}, 0xc000314780)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc00036c000?, {0x7df9f0?, 0xc000368000?}, 0xc000306145?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc0000762a0, {0x7df9f0, 0xc000368000}, 0xc000314780)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x7e0038?, {0x7df9f0?, 0xc000368000?}, 0xa14350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc0000762a0, {0x7df9f0, 0xc000368000}, 0xc000314640)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x7de0f8?}, {0x7df9f0?, 0xc000368000?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc00009b680, {0x7e0000, 0xc000178540})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-08-19 17:44:39","level":"INFO","msg":"Получен запрос на добавление элемента в очередь валидации"}
{"time":"2025-08-20 14:09:26","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-20 14:09:26","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-20 14:09:26","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ./log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-20 14:09:26","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-20 18:56:34","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-20 18:56:34","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-20 18:56:34","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-20 18:56:34","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-20 18:56:39","level":"INFO","msg":"Получен запрос на добавление элемента в очередь валидации"}
{"time":"2025-08-20 18:57:38","level":"INFO","msg":"Получен запрос на добавление элемента в очередь валидации"}
{"time":"2025-08-20 19:03:15","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-20 19:03:15","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-20 19:03:15","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-20 19:03:15","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-20 19:03:28","level":"INFO","msg":"Получен запрос на добавление элемента в очередь валидации"}
{"time":"2025-08-20 19:03:28","level":"DEBUG","msg":"Добавляем элемент валидации: {Topic: LanguageID: VersionID: FileType:}"}
{"time":"2025-08-20 19:05:16","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-20 19:05:16","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-20 19:05:16","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-20 19:05:16","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-20 19:05:21","level":"DEBUG","msg":"Получен запрос на добавление элемента в очередь валидации"}
{"time":"2025-08-20 19:05:21","level":"DEBUG","msg":"Добавляем элемент валидации: {Topic: LanguageID: VersionID: FileType:}"}
{"time":"2025-08-20 20:13:06","level":"DEBUG","msg":"Получен запрос на добавление элемента в очередь валидации"}
{"time":"2025-08-20 20:13:06","level":"DEBUG","msg":"Добавляем элемент валидации: {Topic: LanguageID: VersionID: FileType:}"}
{"time":"2025-08-20 21:04:50","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-20 21:04:50","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-20 21:04:50","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-20 21:04:50","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-20 21:04:57","level":"DEBUG","msg":"Получен запрос на добавление элемента в очередь валидации"}
{"time":"2025-08-20 21:04:57","level":"DEBUG","msg":"Добавляем элемент валидации: {Topic: LanguageID: VersionID: FileType:}"}
{"time":"2025-08-20 21:12:09","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-20 21:12:09","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-20 21:12:09","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-20 21:12:09","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-20 21:12:19","level":"DEBUG","msg":"Получен запрос на добавление элемента в очередь валидации"}
{"time":"2025-08-20 21:12:19","level":"DEBUG","msg":"Добавляем элемент валидации: {Topic: LanguageID: VersionID: FileType:}"}
{"time":"2025-08-20 21:12:52","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-20 21:12:52","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-20 21:12:52","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-20 21:12:52","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-20 21:13:00","level":"DEBUG","msg":"Получен запрос на добавление элемента в очередь валидации"}
{"time":"2025-08-20 21:13:00","level":"DEBUG","msg":"Добавляем элемент валидации: {Topic: LanguageID: VersionID: FileType:}"}
{"time":"2025-08-20 21:13:52","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-20 21:13:52","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-20 21:13:52","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-20 21:13:52","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-20 21:14:13","level":"DEBUG","msg":"Получаем JSON для добавления валидации: \u0026{%!s(*io.LimitedReader=\u0026{0xc00020c000 86}) \u003cnil\u003e %!s(*bufio.Reader=\u003cnil\u003e) %!s(bool=false) %!s(bool=true) {%!s(int32=0) %!s(uint32=0)} %!s(bool=false) %!s(bool=false) %!s(bool=false) %!s(func()=0xe66600)}"}
{"time":"2025-08-20 21:14:13","level":"DEBUG","msg":"Добавляем элемент валидации: {Topic: LanguageID: VersionID: FileType:}"}
{"time":"2025-08-20 21:54:35","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-20 21:54:35","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-20 21:54:35","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-20 21:54:35","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-20 21:54:39","level":"DEBUG","msg":"Получаем JSON для добавления валидации: \u0026{%!s(*io.LimitedReader=\u0026{0xc00020c000 86}) \u003cnil\u003e %!s(*bufio.Reader=\u003cnil\u003e) %!s(bool=false) %!s(bool=true) {%!s(int32=0) %!s(uint32=0)} %!s(bool=false) %!s(bool=false) %!s(bool=false) %!s(func()=0x8b6600)}"}
{"time":"2025-08-20 21:54:39","level":"DEBUG","msg":"Добавляем элемент валидации: {Topic: LanguageID: VersionID: FileType:}"}
{"time":"2025-08-20 21:55:31","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-20 21:55:31","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-20 21:55:31","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-20 21:55:31","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-20 21:58:06","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field ValidationItem.topic of type string","stack":"goroutine 11 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc221a48fb85f9528, 0x244664809d, 0xfd0d00}, {0xc000246000, 0x84}, 0x8, 0xc28679, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc00001efb0, {0xd7fda0, 0x1017260}, 0x8, {0xc000246000, 0x84}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc0002040f0?, {0xc000246000?, 0xc000210180?}, {0x0?, 0x0?, 0xc000222480?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*CheckListHandler).AddCheckItem(0x0?, {0xd7f950, 0xc000236000}, 0xc000212280)\n\tC:/project/golang/pact/garant_service/iternal/handler/check_handler.go:37 +0xf9\nnet/http.HandlerFunc.ServeHTTP(0xc00023c000?, {0xd7f950?, 0xc000236000?}, 0xc000200080?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc000074360, {0xd7f950, 0xc000236000}, 0xc000212280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc0002021b0?, {0xd7f950?, 0xc000236000?}, 0xc00021b968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc000074360, {0xd7f950, 0xc000236000}, 0xc000212280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0xd7f950, 0xc000236000}, 0xc000212280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc00023c000?, {0xd7f950?, 0xc000236000?}, 0xc00021c005?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc000074300, {0xd7f950, 0xc000236000}, 0xc000212280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xd7ff98?, {0xd7f950?, 0xc000236000?}, 0xfb4350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc000074300, {0xd7f950, 0xc000236000}, 0xc000212140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0xd7e058?}, {0xd7f950?, 0xc000236000?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc00002aa20, {0xd7ff60, 0xc000178540})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-08-20 22:02:09","level":"DEBUG","msg":"Добавляем элемент валидации: {Topic: LanguageID: VersionID: FileType:}"}
{"time":"2025-08-20 22:07:10","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-20 22:07:10","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-20 22:07:10","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-20 22:07:10","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-20 22:07:21","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal number into Go struct field ValidationItem.Body.language_id of type string","stack":"goroutine 10 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc221a51a6f82e7e8, 0x2b89690c9, 0x861d00}, {0xc0000c8000, 0x8f}, 0x8, 0x4b896e, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc00001efb0, {0x60ff00, 0x8a8260}, 0x8, {0xc0000c8000, 0x8f}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc00008e0f0?, {0xc0000c8000?, 0xc000098140?}, {0x0?, 0x10?, 0xc00016b360?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*CheckListHandler).AddCheckItem(0xc000060160, {0x60fab0, 0xc0000ba000}, 0xc00009a140)\n\tC:/project/golang/pact/garant_service/iternal/handler/check_handler.go:37 +0x10e\nnet/http.HandlerFunc.ServeHTTP(0xc0000c0000?, {0x60fab0?, 0xc0000ba000?}, 0xc00008a044?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc000074300, {0x60fab0, 0xc0000ba000}, 0xc00009a140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00008c150?, {0x60fab0?, 0xc0000ba000?}, 0xc0000a3968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc000074300, {0x60fab0, 0xc0000ba000}, 0xc00009a140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x60fab0, 0xc0000ba000}, 0xc00009a140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc0000c0000?, {0x60fab0?, 0xc0000ba000?}, 0xc0000a4005?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc0000742a0, {0x60fab0, 0xc0000ba000}, 0xc00009a140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x6100f8?, {0x60fab0?, 0xc0000ba000?}, 0x845350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc0000742a0, {0x60fab0, 0xc0000ba000}, 0xc00009a000)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x60e1b8?}, {0x60fab0?, 0xc0000ba000?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc00002a990, {0x6100c0, 0xc000178540})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-08-20 22:13:01","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-20 22:13:01","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-20 22:13:01","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-20 22:13:01","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-20 22:13:05","level":"DEBUG","msg":"Добавляем элемент валидации: {Body:{Topic:70670880 LanguageID:5 VersionID:1755613446 FileType:}}"}
{"time":"2025-08-21 11:52:50","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-21 11:52:50","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-21 11:52:50","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-21 11:52:50","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-21 14:19:29","level":"DEBUG","msg":"Добавляем элемент валидации: {Body:{Topic:70670880 LanguageID:5 VersionID:1755613446 FileType:}}"}
{"time":"2025-08-21 17:48:35","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-21 17:48:35","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-21 17:48:35","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-21 17:48:35","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-21 17:48:50","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal string into Go struct field FileItem.Body.language_id of type int","stack":"goroutine 22 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc221ea5495da1b68, 0x3719c1319, 0x12a2d20}, {0xc000244000, 0x86}, 0x8, 0xef940f, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc00001efb0, {0x1050920, 0x12e9280}, 0x8, {0xc000244000, 0x86}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc0002040f0?, {0xc000244000?, 0xc0002021b0?}, {0x0?, 0x932c2d5a82f4e683?, 0x2?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*CheckListHandler).AddCheckItem(0xc000194030, {0x10504d0, 0xc000232000}, 0xc000212140)\n\tC:/project/golang/pact/garant_service/iternal/handler/check_handler.go:37 +0x10f\nnet/http.HandlerFunc.ServeHTTP(0xc000238000?, {0x10504d0?, 0xc000232000?}, 0xc000200044?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc0001c8060, {0x10504d0, 0xc000232000}, 0xc000212140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc000202150?, {0x10504d0?, 0xc000232000?}, 0xc00021b968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc0001c8060, {0x10504d0, 0xc000232000}, 0xc000212140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x10504d0, 0xc000232000}, 0xc000212140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc000238000?, {0x10504d0?, 0xc000232000?}, 0xc00021c005?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc0001c8000, {0x10504d0, 0xc000232000}, 0xc000212140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x1050b18?, {0x10504d0?, 0xc000232000?}, 0x1286350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc0001c8000, {0x10504d0, 0xc000232000}, 0xc000212000)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x104ebd8?}, {0x10504d0?, 0xc000232000?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc00019a750, {0x1050ae0, 0xc000192600})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-08-25 12:00:18","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-25 12:00:18","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-25 12:00:18","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-25 12:00:18","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-25 12:08:49","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal string into Go struct field FileItem.Body.language_id of type int","stack":"goroutine 38 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc22327e857e658e0, 0x76618664c5, 0x892d20}, {0xc000228000, 0x86}, 0x8, 0x4e940f, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc0001aaae0, {0x640920, 0x8d9280}, 0x8, {0xc000228000, 0x86}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc0000760f0?, {0xc000228000?, 0xc00001a1e0?}, {0x0?, 0xf58e2e30e67b3b83?, 0x2?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*CheckListHandler).AddCheckItem(0xc000180098, {0x6404d0, 0xc00021c000}, 0xc00007c140)\n\tC:/project/golang/pact/garant_service/iternal/handler/check_handler.go:37 +0x10f\nnet/http.HandlerFunc.ServeHTTP(0xc000222000?, {0x6404d0?, 0xc00021c000?}, 0xc00000a080?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc0001a6180, {0x6404d0, 0xc00021c000}, 0xc00007c140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00001a180?, {0x6404d0?, 0xc00021c000?}, 0xc00020f968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc0001a6180, {0x6404d0, 0xc00021c000}, 0xc00007c140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x6404d0, 0xc00021c000}, 0xc00007c140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc000222000?, {0x6404d0?, 0xc00021c000?}, 0xc000010185?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc0001a6120, {0x6404d0, 0xc00021c000}, 0xc00007c140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x640b18?, {0x6404d0?, 0xc00021c000?}, 0x876350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc0001a6120, {0x6404d0, 0xc00021c000}, 0xc00007c000)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x63ebd8?}, {0x6404d0?, 0xc00021c000?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc00019a7e0, {0x640ae0, 0xc00018ef00})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-08-25 12:30:47","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal string into Go struct field FileItem.Body.language_id of type int","stack":"goroutine 39 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc2232931f0ec27fc, 0x1a959782fe1, 0x892d20}, {0xc00019c090, 0x86}, 0x8, 0x4e940f, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc0001aaae0, {0x640920, 0x8d9280}, 0x8, {0xc00019c090, 0x86}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc0001b61e0?, {0xc00019c090?, 0xc00018f1d0?}, {0x0?, 0xa628e856eebe8575?, 0x2?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*CheckListHandler).AddCheckItem(0xc000180098, {0x6404d0, 0xc000280000}, 0xc0001b0280)\n\tC:/project/golang/pact/garant_service/iternal/handler/check_handler.go:37 +0x10f\nnet/http.HandlerFunc.ServeHTTP(0xc0001f80f0?, {0x6404d0?, 0xc000280000?}, 0xc00018d100?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc0001a6180, {0x6404d0, 0xc000280000}, 0xc0001b0280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00018f170?, {0x6404d0?, 0xc000280000?}, 0xc00020b968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc0001a6180, {0x6404d0, 0xc000280000}, 0xc0001b0280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x6404d0, 0xc000280000}, 0xc0001b0280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc0001f80f0?, {0x6404d0?, 0xc000280000?}, 0xc0001856c5?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc0001a6120, {0x6404d0, 0xc000280000}, 0xc0001b0280)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x640b18?, {0x6404d0?, 0xc000280000?}, 0x876350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc0001a6120, {0x6404d0, 0xc000280000}, 0xc0001b0140)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x63ebd8?}, {0x6404d0?, 0xc000280000?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc00019a870, {0x640ae0, 0xc00018ef00})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-08-25 12:33:00","level":"ERROR","msg":"Ошибка декодирования JSON: json: cannot unmarshal string into Go struct field FileItem.Body.language_id of type int","stack":"goroutine 41 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc22329531040b11c, 0x1c83037ab01, 0x892d20}, {0xc00011e000, 0x86}, 0x8, 0x4e940f, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc0001aaae0, {0x640920, 0x8d9280}, 0x8, {0xc00011e000, 0x86}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc0000e0320?, {0xc00011e000?, 0xc00008b680?}, {0x0?, 0x1ab3bac9aa0e186d?, 0x2?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/handler.(*CheckListHandler).AddCheckItem(0xc000180098, {0x6404d0, 0xc0000fe0e0}, 0xc00009cb40)\n\tC:/project/golang/pact/garant_service/iternal/handler/check_handler.go:37 +0x10f\nnet/http.HandlerFunc.ServeHTTP(0xc00011a000?, {0x6404d0?, 0xc0000fe0e0?}, 0xc00008c970?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc0001a6180, {0x6404d0, 0xc0000fe0e0}, 0xc00009cb40)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0xc00008b620?, {0x6404d0?, 0xc0000fe0e0?}, 0xc000023968?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc0001a6180, {0x6404d0, 0xc0000fe0e0}, 0xc00009cb40)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:73 +0x32f\ngithub.com/go-chi/chi/v5.(*Mux).Mount.func1({0x6404d0, 0xc0000fe0e0}, 0xc00009cb40)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:325 +0x1bb\nnet/http.HandlerFunc.ServeHTTP(0xc00011a000?, {0x6404d0?, 0xc0000fe0e0?}, 0xc00009e605?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).routeHTTP(0xc0001a6120, {0x6404d0, 0xc0000fe0e0}, 0xc00009cb40)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:478 +0x2e2\nnet/http.HandlerFunc.ServeHTTP(0x640b18?, {0x6404d0?, 0xc0000fe0e0?}, 0x876350?)\n\tc:/go/src/net/http/server.go:2220 +0x29\ngithub.com/go-chi/chi/v5.(*Mux).ServeHTTP(0xc0001a6120, {0x6404d0, 0xc0000fe0e0}, 0xc00007c500)\n\td:/work/go/src/pkg/mod/github.com/go-chi/chi/v5@v5.2.2/mux.go:90 +0x2ee\nnet/http.serverHandler.ServeHTTP({0x63ebd8?}, {0x6404d0?, 0xc0000fe0e0?}, 0x6?)\n\tc:/go/src/net/http/server.go:3210 +0x8e\nnet/http.(*conn).serve(0xc00019aa20, {0x640ae0, 0xc00018ef00})\n\tc:/go/src/net/http/server.go:2092 +0x5d0\ncreated by net/http.(*Server).Serve in goroutine 1\n\tc:/go/src/net/http/server.go:3360 +0x485\n"}
{"time":"2025-08-25 12:38:42","level":"DEBUG","msg":"Добавляем элемент валидации: {Body:{Topic:70670880 LanguageID:5 VersionID:1755613446 FileType:0}}"}
{"time":"2025-08-25 12:38:42","level":"DEBUG","msg":"Получен запрос на валидацию: 70670880"}
{"time":"2025-08-25 12:38:43","level":"ERROR","msg":"Ошибка при проверке актуальности: ошибка проверки изменений: 400 Bad Request","stack":"goroutine 37 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc22329a8f3b50044, 0x2183010a029, 0x892d20}, {0xc000068780, 0x80}, 0x8, 0x4e7d7e, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc0001aaae0, {0x640920, 0x8d9280}, 0x8, {0xc000068780, 0x80}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc00000a2e0?, {0xc000068780?, 0x892d20?}, {0x0?, 0x0?, 0x0?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartValidationWorker.func1()\n\tC:/project/golang/pact/garant_service/iternal/queue/validation_worker.go:27 +0x2fe\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartValidationWorker in goroutine 1\n\tC:/project/golang/pact/garant_service/iternal/queue/validation_worker.go:17 +0x73\n"}
{"time":"2025-08-25 12:39:04","level":"DEBUG","msg":"Добавляем элемент валидации: {Body:{Topic:70670880 LanguageID:5 VersionID:1755613446 FileType:0}}"}
{"time":"2025-08-25 12:39:04","level":"DEBUG","msg":"Получен запрос на валидацию: 70670880"}
{"time":"2025-08-25 12:39:05","level":"ERROR","msg":"Ошибка при проверке актуальности: ошибка проверки изменений: 400 Bad Request","stack":"goroutine 37 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc22329ae6f42d1a8, 0x21d4aebcd8d, 0x892d20}, {0xc0001da700, 0x80}, 0x8, 0x4e7d7e, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc0001aaae0, {0x640920, 0x8d9280}, 0x8, {0xc0001da700, 0x80}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc00008c9f8?, {0xc0001da700?, 0x892d20?}, {0x0?, 0x0?, 0x0?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartValidationWorker.func1()\n\tC:/project/golang/pact/garant_service/iternal/queue/validation_worker.go:27 +0x2fe\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartValidationWorker in goroutine 1\n\tC:/project/golang/pact/garant_service/iternal/queue/validation_worker.go:17 +0x73\n"}
{"time":"2025-08-25 12:41:25","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-25 12:41:25","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-25 12:41:25","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-25 12:41:25","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-25 12:41:37","level":"DEBUG","msg":"Добавляем элемент валидации: {Body:{Topic:70670880 LanguageID:5 VersionID:1755613446 FileType:0}}"}
{"time":"2025-08-25 12:41:37","level":"DEBUG","msg":"Получен запрос на валидацию: 70670880"}
{"time":"2025-08-25 12:41:37","level":"DEBUG","msg":"Проверяем изменения для тем: [70670880] с даты: 252537-41-841"}
{"time":"2025-08-25 12:41:38","level":"ERROR","msg":"Ошибка при проверке актуальности: ошибка проверки изменений: 400 Bad Request","stack":"goroutine 23 [running]:\nruntime/debug.Stack()\n\tc:/go/src/runtime/debug/stack.go:26 +0x5e\ndkl.ru/pact/garant_service/iternal/logger.(*CustomHandler).Handle(_, {_, _}, {{0xc22329d49a8374ac, 0x3130232ed, 0x1152d20}, {0xc0000bca00, 0x80}, 0x8, 0xda7e1e, ...})\n\tC:/project/golang/pact/garant_service/iternal/logger/initialization.go:43 +0x58\nlog/slog.(*Logger).log(0xc00008ef70, {0xf00980, 0x1199280}, 0x8, {0xc0000bca00, 0x80}, {0x0, 0x0, 0x0})\n\tc:/go/src/log/slog/logger.go:257 +0x1e4\nlog/slog.(*Logger).Error(0xc000194248?, {0xc0000bca00?, 0x1152d20?}, {0x0?, 0xd?, 0x0?})\n\tc:/go/src/log/slog/logger.go:230 +0x3f\ndkl.ru/pact/garant_service/iternal/queue.StartValidationWorker.func1()\n\tC:/project/golang/pact/garant_service/iternal/queue/validation_worker.go:27 +0x2fe\ncreated by dkl.ru/pact/garant_service/iternal/queue.StartValidationWorker in goroutine 1\n\tC:/project/golang/pact/garant_service/iternal/queue/validation_worker.go:17 +0x73\n"}
{"time":"2025-08-25 12:46:23","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-25 12:46:23","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-25 12:46:23","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-25 12:46:23","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-25 12:46:49","level":"DEBUG","msg":"Добавляем элемент валидации: {Body:{Topic:70670880 LanguageID:5 VersionID:1755613446 FileType:0}}"}
{"time":"2025-08-25 12:46:49","level":"DEBUG","msg":"Получен запрос на валидацию: 70670880"}
{"time":"2025-08-25 12:46:49","level":"DEBUG","msg":"Проверяем изменения для тем: [70670880] с даты: 2025-08-25"}
{"time":"2025-08-25 12:48:01","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-25 12:48:01","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-25 12:48:01","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-25 12:48:01","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-25 12:48:01","level":"DEBUG","msg":"Добавляем элемент валидации: {Body:{Topic:70670880 LanguageID:5 VersionID:1755613446 FileType:0}}"}
{"time":"2025-08-25 12:48:01","level":"DEBUG","msg":"Получен запрос на валидацию: 70670880"}
{"time":"2025-08-25 12:48:01","level":"DEBUG","msg":"Проверяем изменения для тем: [70670880] с даты: 2025-08-25"}
{"time":"2025-08-25 12:48:02","level":"DEBUG","msg":"Результат проверки актуальности: 0 тем"}
{"time":"2025-08-25 13:06:14","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-25 13:06:14","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-25 13:06:14","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-25 13:06:14","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-25 13:06:17","level":"DEBUG","msg":"Добавляем элемент валидации: {Body:{Topic:70670880 LanguageID:5 VersionID:1755613446 FileType:0}}"}
{"time":"2025-08-25 13:06:17","level":"DEBUG","msg":"Получен запрос на валидацию: 70670880"}
{"time":"2025-08-25 13:06:17","level":"DEBUG","msg":"Проверяем изменения для тем: [70670880] с даты: 2025-08-25"}
{"time":"2025-08-25 13:06:18","level":"DEBUG","msg":"Результат проверки актуальности: 0 тем"}
{"time":"2025-08-25 13:06:18","level":"INFO","msg":"Тема 70670880 не найдена в ответе"}
{"time":"2025-08-26 12:45:51","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-26 12:45:51","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-26 12:45:51","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-26 12:45:51","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-26 12:47:44","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-26 12:47:44","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-26 12:47:44","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-26 12:47:44","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-26 16:12:36","level":"DEBUG","msg":"Добавляем элемент валидации: {Body:{Topic:70670880 LanguageID:5 VersionID:1755613446 FileType:0}}"}
{"time":"2025-08-26 16:12:36","level":"DEBUG","msg":"Получен запрос на валидацию: 70670880"}
{"time":"2025-08-26 16:12:36","level":"DEBUG","msg":"Проверяем изменения для тем: [70670880] с даты: 2025-08-26"}
{"time":"2025-08-26 16:12:38","level":"DEBUG","msg":"Результат проверки актуальности: 0 тем"}
{"time":"2025-08-26 16:12:38","level":"INFO","msg":"Тема 70670880 не найдена в ответе"}
{"time":"2025-08-29 14:47:58","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-29 14:47:58","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-29 14:47:58","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-29 14:47:58","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-29 14:50:53","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-29 14:50:53","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-29 14:50:53","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-29 14:50:53","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-29 15:02:52","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-29 15:02:52","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-29 15:02:52","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-29 15:02:52","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-29 15:38:34","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-29 15:38:34","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-29 15:38:34","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-29 15:38:34","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-29 18:43:53","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-29 18:43:53","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-29 18:43:53","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-29 18:43:53","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-29 18:58:31","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-29 18:58:31","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-29 18:58:31","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-29 18:58:31","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-30 18:29:59","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-30 18:29:59","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-30 18:29:59","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-30 18:29:59","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-30 18:34:02","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-30 18:34:02","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-30 18:34:02","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-30 18:34:02","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-30 18:49:06","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-30 18:49:06","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-30 18:49:06","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-30 18:49:06","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-30 19:14:19","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-30 19:14:19","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-30 19:14:19","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-30 19:14:19","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-31 01:36:52","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-31 01:36:52","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-31 01:36:52","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-31 01:36:52","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-31 01:47:08","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-31 01:47:08","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-31 01:47:08","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-31 01:47:08","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-31 02:02:28","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-31 02:02:28","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-31 02:02:28","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-31 02:02:28","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-31 02:03:41","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-31 02:03:41","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-31 02:03:41","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-31 02:03:41","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-31 02:04:24","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-31 02:04:24","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-31 02:04:24","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-31 02:04:24","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-31 02:09:03","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-31 02:09:03","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-31 02:09:03","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-31 02:09:03","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-31 02:16:33","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-31 02:16:33","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-31 02:16:33","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-31 02:16:33","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-31 03:39:35","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-31 03:39:35","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-31 03:39:35","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-31 03:39:35","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-08-31 17:36:06","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-08-31 17:36:06","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-08-31 17:36:06","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-08-31 17:36:06","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 12:25:56","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 12:25:56","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 12:25:56","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 12:25:56","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 12:32:27","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 12:32:27","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 12:32:27","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 12:32:27","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 14:05:13","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 14:05:13","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 14:05:13","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 14:05:13","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 14:08:34","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 14:08:34","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 14:08:34","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 14:08:34","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 14:10:54","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 14:10:54","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 14:10:54","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 14:10:54","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 15:45:46","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 15:45:46","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 15:45:46","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 15:45:46","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 15:46:43","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 15:46:43","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 15:46:43","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 15:46:43","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 15:49:54","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 15:49:54","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 15:49:54","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 15:49:54","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 15:50:59","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 15:50:59","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 15:50:59","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 15:50:59","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 15:54:14","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 15:54:14","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 15:54:14","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 15:54:14","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 15:56:54","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 15:56:54","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 15:56:54","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 15:56:54","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 16:12:03","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 16:12:03","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 16:12:03","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 16:12:03","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 16:14:07","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 16:14:07","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 16:14:07","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 16:14:07","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 16:16:23","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 16:16:23","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 16:16:23","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 16:16:23","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-01 16:16:57","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-01 16:16:57","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-01 16:16:57","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-01 16:16:57","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-04 11:27:02","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-04 11:27:02","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-04 11:27:02","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-04 11:27:02","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-04 11:29:00","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-04 11:29:00","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-04 11:29:00","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-04 11:29:00","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-05 11:37:47","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-05 11:37:47","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-05 11:37:47","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-05 11:37:47","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-08 13:33:49","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-08 13:33:49","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-08 13:33:49","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-08 13:33:49","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-10 16:18:42","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-10 16:18:42","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-10 16:18:42","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-10 16:18:42","level":"INFO","msg":"Сервер запущен на :8081\n"}
{"time":"2025-09-15 16:54:56","level":"INFO","msg":"Логгер успешно инициализирован"}
{"time":"2025-09-15 16:54:56","level":"INFO","msg":"Инициализация успешна"}
{"time":"2025-09-15 16:54:56","level":"DEBUG","msg":"Конфигурация: ConfigStruct{Log_config: LogStruct{Path: ../log/, LogLevel: debug, Name: garant_service, Type: log}, Tokens: TokensStruct{Garant: a7eacee82a7111f09cbb0050568d72f0}, Server: Servers{ Garant: ServerStruct{Host: , Port: 8081, BdService: ServerStruct{Host: , Port: 8080}}"}
{"time":"2025-09-15 16:54:56","level":"INFO","msg":"Сервер запущен на :8081\n"}
