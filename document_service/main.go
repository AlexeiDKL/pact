package main

import (
	"log"
	"net/http"

	"dkl.ru/pact/document_service/iternal/handler"
	"dkl.ru/pact/document_service/iternal/initialization"
	"github.com/go-chi/chi/middleware"
	"github.com/go-chi/chi/v5"
)

/*
üìå –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.
üìå –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –∏–∑ ODT –≤ TXT.
üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–π".
üìå –°–æ–∑–¥–∞–Ω–∏–µ –û–≥–ª–∞–≤–ª–µ–Ω–∏—è.
üìå –°–æ–∑–¥–∞–Ω–∏–µ –ü–æ–ª–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.
*/

func main() {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
	if err := initialization.Init(); err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: %v", err)
	}

	// –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞
	r := chi.NewRouter()
	r.Use(middleware.Logger) // –ò—Å–ø–æ–ª—å–∑—É–µ–º middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤

	// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
	fileHandler := handler.NewFileHandler()
	r.Route("/file", func(r chi.Router) {
		r.Post("/get_texts", fileHandler.GetTexts)                 // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
		r.Post("/convert_odt_to_txt", fileHandler.ConvertOdtToTxt) // –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è ODT –≤ TXT
	})

	r.Get("/health", func(w http.ResponseWriter, r *http.Request) {
		w.Write([]byte("‚úÖ OK, Garant Service is running!"))
	})

	// –ó–∞–ø—É—Å–∫ HTTP —Å–µ—Ä–≤–µ—Ä–∞
	http.ListenAndServe(":8082", r)
}
